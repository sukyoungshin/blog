import Head from 'next/head';
import { ButtonWrapper, HeaderWrapper, LogoHeader, MenuItem, TabMenu } from './Header.style';
import { Button, Icon } from '@components/index';
import { BsBrightnessHigh, BsClock, BsFillMoonFill, BsGraphUp, BsSearch, BsThreeDotsVertical } from 'react-icons/bs';
import React, { useState } from 'react';
import Link from 'next/link';
import { IconType } from 'react-icons/lib';
import { CustomDropdownMenu } from '@components/index';

const Header = () => {
  return (
    <>
      <Head>
        <title>DeVelog</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <DefaultHeading />
    </>
  );
};

interface ITabMenuLists {
  id: number;
  icon: IconType;
  text: string;
}

const TabMenuLists: ITabMenuLists[] = [
  { id: 0, icon: BsGraphUp, text: '트렌딩' },
  { id: 1, icon: BsClock, text: '최신' },
];

const DefaultHeading = () => {
  const [selectId, setSelectId] = useState(0);
  const handleSelectId = (id: number) => setSelectId(id);

  return (
    <HeaderWrapper>
      <LogoHeader>
        <span className="logo">
          <Link href="/">DeVelog</Link>
        </span>

        <ButtonWrapper>
          <li>
            <ButtonModeSwitch />
          </li>
          <li>
            <ButtonSearch />
          </li>
          <li>
            <Button active>로그인</Button>
            {/* <Button>로그아웃</Button> */}
          </li>
        </ButtonWrapper>
      </LogoHeader>

      <TabMenu>
        <ul>
          {TabMenuLists.map((list) => (
            <MenuItem key={list.id} active={list.id === selectId} onClick={() => handleSelectId(list.id)}>
              <Button>
                <Icon size={24}>
                  <list.icon />
                </Icon>
                {list.text}
              </Button>
            </MenuItem>
          ))}
          <li>
            <CustomDropdownMenu />
          </li>
          <li>
            <OptionButton />
          </li>
        </ul>
      </TabMenu>
    </HeaderWrapper>
  );
};

const OptionButton = () => {
  return (
    <Button size={32} onClick={() => console.log('옵션실행')}>
      <Icon size={32} active={true}>
        <BsThreeDotsVertical />
      </Icon>
    </Button>
  );
};

const ButtonModeSwitch = () => {
  const [themeMode, setThemeMode] = useState(false);
  const handleMode = () => {
    // FIXME: theme background color change
    setThemeMode(!themeMode);
  };

  return (
    <Button size={40} onClick={handleMode}>
      {themeMode ? <IconLightMode /> : <IconDarkMode />}
    </Button>
  );
};

const IconLightMode = () => {
  return (
    <Icon size={40}>
      <BsFillMoonFill />
    </Icon>
  );
};

const IconDarkMode = () => {
  return (
    <Icon size={40}>
      <BsBrightnessHigh />
    </Icon>
  );
};

const ButtonSearch = () => {
  return (
    <Button size={40}>
      <Icon size={40}>
        <BsSearch />
      </Icon>
    </Button>
  );
};

export default Header;
